
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author TAN JUN HONG
 */
public class track_user_medical_record extends javax.swing.JFrame {
    String patientIC = "040819050337";
    String [] FinalArray = {};
    String [][] LastArray = {};
    String IdentityC;
    /**
     * Creates new form Track_Patient_Medical_Record1
     */
    public track_user_medical_record() throws IOException {
        initComponents();
        FilterOutNonRepetative();
        addNameToEachic ();
        distinct_table();
    }

    
    public void distinct_table(){
        String[] columnNames={"IC","NAME"};
        DefaultTableModel model = new DefaultTableModel(LastArray, columnNames);
        jTable2.setModel(model);
        jTable2.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    int selectedRow = jTable2.getSelectedRow();
                    if (selectedRow >= 0 && selectedRow < jTable2.getRowCount()) {
                        String IC = (String) jTable2.getValueAt(selectedRow, 0);
                        String Name = (String) jTable2.getValueAt(selectedRow, 1);
                        IdentityC = IC;
                    }
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Medical Record");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "IC", "NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton7.setForeground(new java.awt.Color(204, 0, 51));
        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(273, 273, 273))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(148, 148, 148))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        try {
            PatientsListTable();
        } catch (IOException ex) {
            Logger.getLogger(track_user_medical_record.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable2MousePressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Admin_Registration_GUI Admin_Registration_GUI = new Admin_Registration_GUI();
        Admin_Registration_GUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed
    public void PatientsListTable() throws IOException {
        String[] columnNames = {"Doc_IC","Doc_Name","Patient_IC", "Patient_Name", "Disease", "Time", "Day","Appointment_Method","Medical Record","Price","Payment Status"};
        
        String data [][] = new String[100][columnNames.length];
        int j = -1;
        try (FileReader fr = new FileReader("C:\\Users\\GF63\\OneDrive - Asia Pacific University\\desktop\\txt file\\Patient History.txt");
            BufferedReader br = new BufferedReader(fr)) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] values = line.split(",");
                if(values[2].equals(IdentityC)){
                    j++;        
                    System.arraycopy(values, 0, data[j], 0, values.length);
                }
            }
            br.close();
        }
        
       
        Object[][] tableData = new Object[j+1][columnNames.length];
        for (int i = 0; i < j+1; i++) {
            tableData[i][0] = data[i][0];
            for (int p = 0; p < columnNames.length; p++) {
                tableData[i][p] = data[i][p];
            }
        }
        DefaultTableModel model = new DefaultTableModel(tableData, columnNames);
        jTable1.setModel(model);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
    }
    
    public void FilterOutNonRepetative() throws IOException {
        FinalArray=new String[]{};
        String []RegisterArray = {};
        try (FileReader fr = new FileReader("C:\\Users\\GF63\\OneDrive - Asia Pacific University\\desktop\\txt file\\Register.txt");
            BufferedReader br = new BufferedReader(fr)) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] values = line.split(",");
                if(values[5].equals("Patient")){
                    RegisterArray = Arrays.copyOf(RegisterArray, RegisterArray.length+1);
                    RegisterArray[RegisterArray.length-1] = values[0];
                }
            }
            br.close();
        }
        String []PatientHistoryArray = {};
        try (FileReader fr2 = new FileReader("C:\\Users\\GF63\\OneDrive - Asia Pacific University\\desktop\\txt file\\Patient History.txt");
            BufferedReader br2 = new BufferedReader(fr2)) {
            String line2;
            while ((line2 = br2.readLine()) != null) {
                String[] values2 = line2.split(",");
                PatientHistoryArray = Arrays.copyOf(PatientHistoryArray, PatientHistoryArray.length+1);
                PatientHistoryArray[PatientHistoryArray.length-1] = values2[2];
            }
            br2.close();
        }
        for(String i : RegisterArray){
            for(String j: PatientHistoryArray){
                if(i.equals(j)){
                    FinalArray = Arrays.copyOf(FinalArray, FinalArray.length+1);
                    FinalArray[FinalArray.length-1] = i;
                    break;
                }
            }
        }
        System.out.println(Arrays.deepToString(PatientHistoryArray));
        
    }
    
    public void addNameToEachic () throws IOException{
        try (FileReader fr2 = new FileReader("C:\\Users\\GF63\\OneDrive - Asia Pacific University\\desktop\\txt file\\Register.txt");
            BufferedReader br2 = new BufferedReader(fr2)) {
            String line2;
            while ((line2 = br2.readLine()) != null) {
                String[] values2 = line2.split(",");
                for(String i : FinalArray){
                    if(values2[0].equals(i)){
                        LastArray = Arrays.copyOf(LastArray, LastArray.length+1);
                        LastArray[LastArray.length-1] = new String[]{values2[0],values2[1]}; 
                    }
                }
            }
            br2.close();
            System.out.println(Arrays.deepToString(LastArray));
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(track_user_medical_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(track_user_medical_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(track_user_medical_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(track_user_medical_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new track_user_medical_record().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(track_user_medical_record.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
