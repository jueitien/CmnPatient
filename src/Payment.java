
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author TAN JUN HONG
 */
public class Payment extends javax.swing.JFrame {
    String unpaidList [][] = {};
    String paidList [][] = {};
    String IC = null;
    String Disease = null;
    String Time = null;
    String Day = null;
    /**
     * Creates new form Payment1
     */
    public Payment() {
        initComponents();
        SeperateWalkinAndBookToDifferentArrays();
        ListOutTheArrays(unpaidList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Unpaid = new javax.swing.JButton();
        Paid = new javax.swing.JButton();
        jBPaid = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Payment ");

        Unpaid.setBackground(new java.awt.Color(204, 204, 204));
        Unpaid.setText("Unpaid");
        Unpaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnpaidActionPerformed(evt);
            }
        });

        Paid.setText("Paid");
        Paid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaidActionPerformed(evt);
            }
        });

        jBPaid.setText("PAID");
        jBPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPaidActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "IC", "Name", "Disease", "Time", "Day", "Appointment", "Medical Record", "Price", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton7.setForeground(new java.awt.Color(204, 0, 51));
        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(298, 298, 298))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Unpaid)
                            .addComponent(Paid))
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(90, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBPaid)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(Unpaid)
                        .addGap(52, 52, 52)
                        .addComponent(Paid))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jBPaid)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaidActionPerformed

        ListOutTheArrays(paidList);
    }//GEN-LAST:event_PaidActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow != -1) {
            this.IC = jTable2.getValueAt(selectedRow, 0).toString();
            this.Disease = jTable2.getValueAt(selectedRow, 2).toString();
            this.Time = jTable2.getValueAt(selectedRow, 3).toString();
            this.Day = jTable2.getValueAt(selectedRow, 4).toString();
            
        }
    }//GEN-LAST:event_jTable2MousePressed

    private void jBPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPaidActionPerformed
        ChangePaymentStatus();
        JOptionPane.showMessageDialog(this, "Updated Payment Status");
        Payment pg = new Payment();
        pg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBPaidActionPerformed

    private void UnpaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnpaidActionPerformed
        ListOutTheArrays(unpaidList);
    }//GEN-LAST:event_UnpaidActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Admin_Registration_GUI Admin_Registration_GUI = new Admin_Registration_GUI();
        Admin_Registration_GUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    public void SeperateWalkinAndBookToDifferentArrays(){
        
        try (BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\GF63\\OneDrive - Asia Pacific University\\desktop\\txt file\\Patient History.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] values = line.split(",");
                if(values[10].equals("Unpaid")){
                    unpaidList = Arrays.copyOf(unpaidList, unpaidList.length+1);
                    unpaidList[unpaidList.length-1] = Arrays.copyOfRange(values, 2, 11);
                }else{
                    paidList = Arrays.copyOf(paidList, paidList.length+1);
                    paidList[paidList.length-1] = Arrays.copyOfRange(values, 2, 11);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading user file", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    public void ListOutTheArrays(Object[][] inputArray) {
        String[] columnNames = {"IC", "Name", "Disease", "Time", "Day", "Method", "Medical Record", "Price", "Payment Status"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        for (Object[] row : inputArray) {
            model.addRow(row);
        }

        jTable2.setModel(model);
    }
    public void ChangePaymentStatus(){
        String [][] PatientHistory = {};
        System.out.println(IC+","+Disease);
        try (BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\GF63\\OneDrive - Asia Pacific University\\desktop\\txt file\\Patient History.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] values = line.split(",");
                if(values[2].equals(IC)&&values[4].equals(Disease)&&values[5].equals(Time)&&values[6].equals(Day)){
                    values[10] = "Paid";
                }
                PatientHistory = Arrays.copyOf(PatientHistory, PatientHistory.length+1);
                PatientHistory[PatientHistory.length-1] = values;
                System.out.println(Arrays.deepToString(values));
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading user file", "Error", JOptionPane.ERROR_MESSAGE);
        }
        try (BufferedWriter bw2 = new BufferedWriter(new FileWriter("C:\\Users\\GF63\\OneDrive - Asia Pacific University\\desktop\\txt file\\Patient History.txt", false))) {
            for (String[] EachPatient : PatientHistory) {
                String sentence = Arrays.stream(EachPatient)
                                .map(element -> element.trim().replaceFirst("\\s", ""))
                                .collect(Collectors.joining(","));
                bw2.write(sentence + "\n");
            }
            bw2.close();
        } catch (IOException e) {
            System.out.println("Error writing to selected appointment file: " + e.getMessage());
        }    
    }
    
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Payment().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Paid;
    private javax.swing.JButton Unpaid;
    private javax.swing.JButton jBPaid;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
